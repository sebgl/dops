#!/bin/bash -u
#
# Docker entrypoint to setup all the things
#

sourcenv () {
  if [[ -d /ops/env ]]; then
    while read envfile; do
      export $(cat $envfile | grep -v "^#" | xargs)
    done < <(find /ops/env -name "*.env")
  fi
}

source_cluster_env() {
  eval $(set_cluster_env)
}

source_docker_env() {
  export ERROR_ENV=""
  eval $(set_docker_env)
  if [[ "$ERROR_ENV" != "" ]]; then
    echo
    echo "$ERROR_ENV"
    echo
  fi
}

ascii_welcome() {
  QUIET=${QUIET:-"no"}
  [[ "$QUIET" == "y" ]] && \
  echo '      _
   __| | ___  _ __  ___
  / _` |/ _ \| |_ \/ __|
 | (Â°| < (#) < |_) \__ \
  \__,_|\___/| .__/|___/
             |_|
 -----------------------
 Yo!'
}

main() {
  local arg="${@:-"zsh"}"

  vault decrypt /ops  encrypt
  vault decrypt /root encrypt

  sourcenv

  if [[ "${CLUSTER:-}" != "" ]]; then
    source_cluster_env
    source_docker_env
  fi

  case "$arg" in
    console)
        if [[ ! -z $GOTTY_CREDENTIAL ]]; then
          echo "---> credential = $GOTTY_CREDENTIAL"
          sed -i \
            -e "s|x:changemeplease|$GOTTY_CREDENTIAL|" \
              /root/.gotty
        fi
        exec gotty run zsh
      ;;
    zsh)
      ascii_welcome
      exec zsh
      ;;
    *)
      exec "$@"
    ;;
  esac
}

main "$@"